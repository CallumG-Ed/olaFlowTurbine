#!/bin/bash

. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Choice
# "(1) Waves and current"
# "(2) Current only"


# choose 1, 2, 3 or 4 for different simulation types
reply="$(grep "choice" setup | sed 's/;//' | tr -s " " | cut -d" " -f2)"
endTime=$(foamDictionary -value -entry endTime system/controlDict)
directory="./processor0/"

if [ -d "$directory" ]; then

  # Running
  latestTime=$(foamListTimes -latestTime -processor)
  echo "Attempting to restart solver from time $latestTime ..."
  mv log.olaDyMFlow log.olaDyMFlow$latestTime
  runParallel olaDyMFlow

else

  # Set initial conditions
  echo Preparing 0 folder...
  cp -r 0.org 0

  # Make choice changes
  echo Making case adjustments...
  if [ $reply == "1" ];
  then
      cp constant/waveDict_wave constant/waveDict

  elif [ $reply == "2" ];
  then
      cp constant/waveDict_curr constant/waveDict

  fi


  # Meshing
  runApplication blockMesh
  runApplication decomposePar
  runParallel snappyHexMesh -overwrite
  runApplication reconstructParMesh -constant
  mv log.decomposePar log.decomposeParMesh
  rm -fr pro*
  runApplication checkMesh

  #Running
  runApplication topoSet
  runApplication setFields
  runApplication decomposePar
  runParallel olaDyMFlow

fi

if [ -d "$directory$endTime" ]; then

  # reconstructing
  runApplication reconstructPar

  # Cleaning directory
  touch olaFlowTurbine.foam
  mkdir logs
  mv log.* logs
  rm -fr pro*

  echo Simulation complete.

fi
