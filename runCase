#!/bin/bash

. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Choice
echo Select a choice:
echo  "(1) Waves and forward current"
echo  "(2) Waves and backward current"
echo  "(3) Forward current only"
echo  "(4) Backward current only"
read -p " " -n 1 -r reply
echo ' '

if ! [[ $reply =~ ^[1234]$ ]]
then
    echo Invalid choice
    exit
fi

# Set initial conditions
echo Preparing 0 folder...
cp -r 0.org 0

# Make choice changes
echo Making case adjustments...
if [ $reply == "1" ];
then
    cp 0/U_forw 0/U
    cp system/setFieldsDict_forw system/setFieldsDict
    cp constant/waveDict_wave_forw constant/waveDict
elif [ $reply == "2" ];
then
    cp 0/U_back 0/U
    cp system/setFieldsDict_back system/setFieldsDict
    cp constant/waveDict_wave_back constant/waveDict
elif [ $reply == "3" ];
then
    cp 0/U_forw 0/U
    cp system/setFieldsDict_forw system/setFieldsDict
    cp constant/waveDict_curr_forw constant/waveDict
elif [ $reply == "4" ];
then
    cp 0/U_back 0/U
    cp system/setFieldsDict_back system/setFieldsDict
    cp constant/waveDict_curr_back constant/waveDict
fi


runApplication blockMesh
runApplication decomposeParDict
runParallel snappyHexMesh -overwrite
runApplication reconstructParMesh -constant
runApplication checkMesh
runApplication topoSet
runApplication setFields
runApplication decomposePar
runParallel olaDyMFlow $nProc
runApplication reconstructPar

touch olaFlowTurbine.foam
mkdir logs
mv log.* logs
rm -fr pro*
echo Simulation complete.
